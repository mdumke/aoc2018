bani 3 456 3       loop1:  d = d & 456
eqri 3 72 3                if d != 72: loop1
addr 3 4 4
seti 0 0 4
seti 0 2 3                 d = 0
bori 3 65536 2       E:    c = d | 2**16
seti 1397714 1 3           d = 1397714
bani 2 255 5         D:    e = c & 255
addr 3 5 3                 d += e
bani 3 16777215 3          d = d & (2**24 - 1)
muli 3 65899 3             d *= 65899
bani 3 16777215 3          d = d & (2**24 - 1)
gtir 256 2 5               if 256 > c: jump A
addr 5 4 4
addi 4 1 4
seti 27 6 4
seti 0 6 5                 e = 0
addi 5 1 1           C:    b = e + 1
muli 1 256 1               b *= 256
gtrr 1 2 1                 if b > c: jump B
addr 1 4 4
addi 4 1 4
seti 25 2 4
addi 5 1 5                 e++
seti 17 0 4                jump C
setr 5 7 2           B:    c = e
seti 7 4 4                 jump D
eqrr 3 0 5           A:    if d == a: end
addr 5 4 4
seti 5 8 4                 jump E
0: seti 123 0 3




x = 1397714 // 101010101001111010010
y = 65899   // 10000000101101011

d = 0

while (d !== a) {
  // make sure the 2^16 bit is set (guarantees c has three bytes)
  c = d | 2**16
  d = 1397714

  loop:
    // add the last 8 bits of c to d
    d += c % 256

    // keep only the last 24 bits
    d = d % 256**3
    d *= (256**2 + 363)
    d = d % 256**3

    if c < 256: break

    // get rid of last 8 bits of c
    c = f[c / 256]
}


// d can be at most 2**24 - 1
// c can be at most 2**24 - 1
